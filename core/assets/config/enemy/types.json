{
	bat: {
		typeName: bat,
		
		animationsConfig: config/animation/enemy/bat.json,
		stateConfig: config/enemy/states/bat.json,
		initialState: move,
		attackConfig: config/enemy/attack/bat.json,
		aiConfig: config/enemy/ai/bat.json,
		
		health: 1,
		movingSpeed: 3,
		
		imageOffsetX: 0f,
		imageOffsetY: -0.2f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: true,
		sensorRadius: 6f,
		
		pushForceDamage: 50,
		pushForceHit: 25,
		
		drops: {
			coin: 0.3,
		}
	},
	gladiator: {
		typeName: gladiator,
		
		animationsConfig: config/animation/enemy/gladiator.json,
		stateConfig: config/enemy/states/gladiator.json,
		initialState: idle,
		attackConfig: config/enemy/attack/gladiator.json,
		aiConfig: config/enemy/ai/gladiator.json,
		
		health: 35,
		movingSpeed: 1.5,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.1f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: true,
		sensorRadius: 4f,
		
		pushForceDamage: 25,
		pushForceHit: 40,
		
		drops: {
			coin: 0.5,
		}
	},
	mini_golem: {
		typeName: mini_golem,
		
		animationsConfig: config/animation/enemy/mini_golem.json,
		stateConfig: config/enemy/states/mini_golem.json,
		initialState: idle,
		attackConfig: config/enemy/attack/mini_golem.json
		aiConfig: config/enemy/ai/mini_golem.json
		
		health: 15,
		movingSpeed: 0.75,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.4f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: true,
		sensorRadius: 3f,
		
		pushForceDamage: 35,
		pushForceHit: 30,
		
		usesHealthBar: true,
		healthBarOffsetX: 0,
		healthBarOffsetY: -0.2,
		healthBarWidthFactor: 0.7,
		healthBarAlwaysVisible: true,
		
		drops: {
			coin: 0.4,
		}
	},
	
	golem: {
		typeName: golem,
		
		animationsConfig: config/animation/enemy/golem.json,
		stateConfig: config/enemy/states/golem.json,
		initialState: idle,
		attackConfig: config/enemy/attack/golem.json
		aiConfig: config/enemy/ai/golem.json
		
		health: 45,
		movingSpeed: 1.25,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.2f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.5f,
		
		addSensor: true,
		sensorRadius: 5f,
		
		pushForceDamage: 15,
		pushForceHit: 50,
		
		usesHealthBar: true,
		healthBarOffsetX: 0,
		healthBarOffsetY: 0.3,
		healthBarWidthFactor: 0.7,
		healthBarAlwaysVisible: true,
		
		drops: {
			coin: 0.5,
			big_coin: 0.3,
		}
	},
	
	minotaur: {
		typeName: minotaur,
		
		animationsConfig: config/animation/enemy/minotaur.json,
		stateConfig: config/enemy/states/minotaur.json,
		initialState: idle,
		attackConfig: config/enemy/attack/minotaur.json
		
		health: 150,
		movingSpeed: 3.0,
		
		imageOffsetX: 0f,
		imageOffsetY: -0.2f,
		
		bodyShape: OCTAGON,
		bodyWidth: 1.2f,
		bodyHeight: 1.8f,
		
		addSensor: true,
		sensorRadius: 10f,
		
		pushForceDamage: 15,
		pushForceHit: 40,
		
		usesHealthBar: true,
		healthBarOffsetX: 1,
		healthBarOffsetY: -1,
		healthBarWidthFactor: 0.5,
	},
	spider: {
		typeName: spider,
		
		animationsConfig: config/animation/enemy/spider.json,
		stateConfig: config/enemy/states/spider.json,
		initialState: idle,
		attackConfig: config/enemy/attack/spider.json,
		aiConfig: config/enemy/ai/spider.json,
		
		health: 20,
		movingSpeed: 2.0,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.5f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: true,
		sensorRadius: 6f,
		
		pushForceDamage: 35,
		pushForceHit: 30,
		
		drops: {
			coin: 0.5,
			big_coin: 0.1,
		}
	},
	mimic_chest: {
		typeName: mimic_chest,
		
		animationsConfig: config/animation/enemy/mimic_chest.json,
		stateConfig: config/enemy/states/mimic_chest.json,
		initialState: waiting,
		attackConfig: config/enemy/attack/mimic_chest.json,
		aiConfig: config/enemy/ai/mimic.json,
		
		health: 20,
		movingSpeed: 2.0,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.2f,
		
		bodyShape: RECTANGLE,
		bodyWidth: 0.5f,
		bodyHeight: 0.5f,
		
		addSensor: true,
		sensorRadius: 4f,
		
		pushForceDamage: 35,
		pushForceHit: 30,
		
		drops: {
			coin: 0.7,
			big_coin: 0.1,
		}
	},
	mimic_barrel: {
		typeName: mimic_barrel,
		
		animationsConfig: config/animation/enemy/mimic_barrel.json,
		stateConfig: config/enemy/states/mimic_barrel.json,
		initialState: waiting,
		attackConfig: config/enemy/attack/mimic_barrel.json,
		aiConfig: config/enemy/ai/mimic.json,
		
		health: 30,
		movingSpeed: 2.0,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.1f,
		
		bodyShape: RECTANGLE,
		bodyWidth: 0.5f,
		bodyHeight: 0.7f,
		
		addSensor: true,
		sensorRadius: 4f,
		
		pushForceDamage: 35,
		pushForceHit: 30,
		
		drops: {
			coin: 0.4,
			big_coin: 0.2,
		}
	},
	cobra: {
		typeName: cobra,
		
		animationsConfig: config/animation/enemy/cobra.json,
		stateConfig: config/enemy/states/cobra.json,
		initialState: idle,
		attackConfig: config/enemy/attack/cobra.json,
		aiConfig: config/enemy/ai/cobra.json,
		
		health: 20,
		movingSpeed: 1.0,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.3f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.4f,
		
		addSensor: true,
		sensorRadius: 5f,
		
		pushForceDamage: 35,
		pushForceHit: 30,
		
		drops: {
			coin: 0.4,
			big_coin: 0.1,
		}
	},
	fire_elemental: {
		typeName: fire_elemental,
		
		animationsConfig: config/animation/enemy/fire_elemental.json,
		stateConfig: config/enemy/states/fire_elemental.json,
		initialState: idle,
		attackConfig: config/enemy/attack/fire_elemental.json,
		aiConfig: config/enemy/ai/elemental.json,
		
		health: 15,
		movingSpeed: 1.5,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.3f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: true,
		sensorRadius: 6f,
		
		pushForceDamage: 45,
		pushForceHit: 25,
		
		usesHealthBar: true,
		healthBarOffsetX: 0,
		healthBarOffsetY: -0.4,
		healthBarWidthFactor: 0.5,
		healthBarAlwaysVisible: true,
		
		drops: {
			coin: 0.5,
		}
	},
	ice_elemental: {
		typeName: ice_elemental,
		
		animationsConfig: config/animation/enemy/ice_elemental.json,
		stateConfig: config/enemy/states/ice_elemental.json,
		initialState: idle,
		attackConfig: config/enemy/attack/ice_elemental.json,
		aiConfig: config/enemy/ai/elemental.json,
		
		health: 15,
		movingSpeed: 1.5
		applyGroundPhysics: false, // must be able to move on ice
		
		imageOffsetX: 0f,
		imageOffsetY: 0.3f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: true,
		sensorRadius: 4f,
		
		pushForceDamage: 45,
		pushForceHit: 25,
		
		usesHealthBar: true,
		healthBarOffsetX: 0,
		healthBarOffsetY: -0.4,
		healthBarWidthFactor: 0.5,
		healthBarAlwaysVisible: true,
		
		drops: {
			coin: 0.5,
		}
	},
	imp: {
		typeName: imp,
		
		animationsConfig: config/animation/enemy/imp.json,
		stateConfig: config/enemy/states/imp.json,
		initialState: idle,
		attackConfig: config/enemy/attack/imp.json,
		aiConfig: config/enemy/ai/imp.json,
		
		health: 20,
		movingSpeed: 2.5,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.3f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: true,
		sensorRadius: 7f,
		
		pushForceDamage: 25,
		pushForceHit: 30,
		
		usesHealthBar: true,
		healthBarOffsetX: 0,
		healthBarOffsetY: -0.2,
		healthBarWidthFactor: 0.7,
		healthBarAlwaysVisible: true,
		
		drops: {
			coin: 0.4,
			big_coin: 0.1,
		}
	},
	cyclops: {
		typeName: cyclops,
		
		animationsConfig: config/animation/enemy/cyclops.json,
		stateConfig: config/enemy/states/cyclops.json,
		initialState: idle,
		attackConfig: config/enemy/attack/cyclops.json
		
		health: 150,
		movingSpeed: 2.0,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.4f,
		
		bodyShape: OCTAGON,
		bodyWidth: 1.0f,
		bodyHeight: 1.4f,
		
		addSensor: true,
		sensorRadius: 12f,
		
		pushForceDamage: 0,
		pushForceHit: 40,
		
		usesHealthBar: true,
		healthBarOffsetX: 0.6,
		healthBarOffsetY: -0.4,
		healthBarWidthFactor: 0.5,
	},
	totem: {
		typeName: totem,
		
		animationsConfig: config/animation/enemy/totem.json,
		stateConfig: config/enemy/states/totem.json,
		initialState: idle,
		attackConfig: config/enemy/attack/totem.json,
		aiConfig: config/enemy/ai/totem.json,
		
		health: 15,
		movingSpeed: 0,
		
		imageOffsetX: 0f,
		imageOffsetY: 0f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: true,
		sensorRadius: 8f,
		
		pushForceDamage: 0,
		pushForceHit: 0,
		
		drops: {
			coin: 0.5,
		}
	},
	goblin_king: {
		typeName: goblin_king,
		
		animationsConfig: config/animation/enemy/goblin_king.json,
		stateConfig: config/enemy/states/goblin_king.json,
		initialState: idle,
		attackConfig: config/enemy/attack/goblin_king.json,
		
		health: 350,
		movingSpeed: 1.5,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.3f,
		
		bodyShape: OCTAGON,
		bodyWidth: 1.2f,
		bodyHeight: 1.4f,
		
		addSensor: true,
		sensorRadius: 15f,
		
		pushForceDamage: 0,
		pushForceHit: 40,
		
		usesHealthBar: true,
		healthBarOffsetX: 0.1,
		healthBarOffsetY: -0.4,
		healthBarWidthFactor: 1.0,
	},
	alarm_clock: {
		typeName: alarm_clock,
		
		animationsConfig: config/animation/enemy/alarm_clock.json,
		stateConfig: config/enemy/states/alarm_clock.json,
		initialState: idle,
		
		health: 6,
		movingSpeed: 0,
		movable: false,
		
		imageOffsetX: 0f,
		imageOffsetY: 0f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: true,
		sensorRadius: 4f,
		useSensorAsForceField: true,
		ignoreForceFieldWhenBlocking: true,
		
		pushForceDamage: 0,
		pushForceHit: 0,
		
		isBoss: true
		bossName: "Alarm Clock - Scourge of the sleeping",
	}
	dummy: {
		typeName: dummy,
        
        animationsConfig: config/animation/enemy/dummy.json,
        stateConfig: config/enemy/states/dummy.json,
        initialState: idle,
        
        health: 50,
        movingSpeed: 0,
        movable: false,
        
        imageOffsetX: 0f,
        imageOffsetY: 0f,
        
        bodyShape: CIRCLE,
		bodyRadius: 0.3f,
        
        pushForceDamage: 0,
        pushForceHit: 0,
        
		usesHealthBar: true,
		healthBarOffsetX: 0,
		healthBarOffsetY: 0,
		healthBarWidthFactor: 1.0,
		healthBarAlwaysVisible: true,
	},
	
	ogre: {
		typeName: ogre,
		
		animationsConfig: config/animation/enemy/ogre.json,
		stateConfig: config/enemy/states/ogre.json,
		initialState: idle,
		attackConfig: config/enemy/attack/ogre.json,
		
		health: 150,
		movingSpeed: 1.5f,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.7f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.7f,
		
		addSensor: true,
		sensorRadius: 7f,
		
		pushForceDamage: 5,
		pushForceHit: 5,
		
		drops: {
			metal_ingot: 1,
		}
		
		isBoss: true
		bossName: "Cave Troll - Occupant of Moria",
	}
	
	// not a real enemy, but it's easier to model it as one, because it needs to be attacked by the player
	dwarven_guardian_construct: {
		typeName: dwarven_guardian_construct,
		
		animationsConfig: config/animation/enemy/dwarven_guardian_construct.json,
		stateConfig: config/enemy/states/dwarven_guardian_construct.json,
		initialState: idle,
		attackConfig: config/enemy/attack/dwarven_guardian_construct.json,
		
		health: 10, // doesn't take damage
		movingSpeed: 0.5f,
		movable: false, // the player can't push it
		
		imageOffsetX: 0f,
		imageOffsetY: 0.2f,
		
		bodyShape: OCTAGON,
		bodyWidth: 1.7f,
		bodyHeight: 1.6f,
		
		pushForceDamage: 0,
		pushForceHit: 0,
	}
	
	// not a real enemy, but it's easier to model it as one, because it needs to be attacked by the player
	fire_totem: {
		typeName: fire_totem,
		
		animationsConfig: config/animation/enemy/fire_totem.json,
		stateConfig: config/enemy/states/fire_totem.json,
		initialState: idle,
		attackConfig: config/enemy/attack/fire_totem.json,
		
		health: 10, // doesn't take damage
		movingSpeed: 0.5f,
		movable: false, // the player can't push it
		
		imageOffsetX: 0f,
		imageOffsetY: 0.2f,
		
		bodyShape: OCTAGON,
		bodyWidth: 0.5f,
		bodyHeight: 0.5f,
		
		pushForceDamage: 0,
		pushForceHit: 0,
	}
	
	giant_golem: {
		typeName: giant_golem,
		
		animationsConfig: config/animation/enemy/giant_golem.json,
		stateConfig: config/enemy/states/giant_golem.json,
		initialState: idle,
		attackConfig: config/enemy/attack/giant_golem.json,
		
		health: 100,
		movingSpeed: 1.5f,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.3f,
		
		bodyShape: OCTAGON,
		bodyWidth: 1.5f,
		bodyHeight: 1.7f,
		
		addSensor: true,
		sensorRadius: 10f,
		
		pushForceDamage: 1,
		pushForceHit: 50,
		
		isBoss: true
		bossName: "Stone Titan - Keeper of the lost castle",
	}
	
	gargoyle: {
		typeName: gargoyle,
		
		animationsConfig: config/animation/enemy/gargoyle.json,
		stateConfig: config/enemy/states/gargoyle.json,
		initialState: statue,
		attackConfig: config/enemy/attack/gargoyle.json,
		
		health: 20,
		movingSpeed: 1.5f,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.3f,
		
		bodyShape: OCTAGON,
		bodyWidth: 1f,
		bodyHeight: 0.7f,
		
		addSensor: true,
		sensorRadius: 5f,
		
		pushForceDamage: 0,
		pushForceHit: 30,
	},
	
	bandit_leader: {
		typeName: bandit_leader,
		
		animationsConfig: config/animation/enemy/bandit_leader.json,
		stateConfig: config/enemy/states/bandit_leader.json,
		initialState: idle,
		attackConfig: config/enemy/attack/bandit_leader.json,
		aiConfig: config/enemy/ai/bandit.json,
		
		health: 20,
		movingSpeed: 2,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.1f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: true,
		sensorRadius: 4f,
		
		pushForceDamage: 25,
		pushForceHit: 50,
		
		usesHealthBar: true,
		healthBarOffsetX: -0.1,
		healthBarOffsetY: 0,
		healthBarWidthFactor: 0.7,
		healthBarAlwaysVisible: true,
		
		drops: {
			coin: 0.7,
		}
	},
	
	bandit_shield: {
		typeName: bandit_shield,
		
		animationsConfig: config/animation/enemy/bandit_shield.json,
		stateConfig: config/enemy/states/bandit_shield.json,
		initialState: idle,
		attackConfig: config/enemy/attack/bandit_shield.json,
		aiConfig: config/enemy/ai/bandit.json,
		
		health: 30,
		movingSpeed: 1.25,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.1f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: true,
		sensorRadius: 4f,
		
		pushForceDamage: 15,
		pushForceHit: 30,
		
		usesHealthBar: true,
		healthBarOffsetX: 0,
		healthBarOffsetY: -0.2,
		healthBarWidthFactor: 0.7,
		healthBarAlwaysVisible: true,
		
		drops: {
			coin: 0.7,
		}
	},
	
	bandit_archer: {
		typeName: bandit_archer,
		
		animationsConfig: config/animation/enemy/bandit_archer.json,
		stateConfig: config/enemy/states/bandit_archer.json,
		initialState: idle,
		attackConfig: config/enemy/attack/bandit_archer.json,
		aiConfig: config/enemy/ai/bandit_archer.json,
		
		health: 20,
		movingSpeed: 2,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.1f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: true,
		sensorRadius: 6f,
		
		pushForceDamage: 25,
		pushForceHit: 50,
		
		usesHealthBar: true,
		healthBarOffsetX: 0,
		healthBarOffsetY: -0.2,
		healthBarWidthFactor: 0.7,
		healthBarAlwaysVisible: true,
		
		drops: {
			coin: 0.7,
		}
	},
	
	bandit_mage: {
		typeName: bandit_mage,
		
		animationsConfig: config/animation/enemy/bandit_mage.json,
		stateConfig: config/enemy/states/bandit_mage.json,
		initialState: idle,
		attackConfig: config/enemy/attack/bandit_mage.json,
		aiConfig: config/enemy/ai/bandit_archer.json,
		
		health: 20,
		movingSpeed: 2,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.1f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: true,
		sensorRadius: 5f,
		
		pushForceDamage: 25,
		pushForceHit: 75,
		
		usesHealthBar: true,
		healthBarOffsetX: 0,
		healthBarOffsetY: -0.2,
		healthBarWidthFactor: 0.7,
		healthBarAlwaysVisible: true,
		
		drops: {
			coin: 0.7,
		}
	},
	
	bandit_slingshot: {
		typeName: bandit_slingshot,
		
		animationsConfig: config/animation/enemy/bandit_slingshot.json,
		stateConfig: config/enemy/states/bandit_slingshot.json,
		initialState: idle,
		attackConfig: config/enemy/attack/bandit_slingshot.json,
		aiConfig: config/enemy/ai/bandit_archer.json,
		
		health: 20,
		movingSpeed: 2,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.1f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: true,
		sensorRadius: 5f,
		
		pushForceDamage: 15,
		pushForceHit: 50,
		
		usesHealthBar: true,
		healthBarOffsetX: 0,
		healthBarOffsetY: 0,
		healthBarWidthFactor: 0.5,
		healthBarAlwaysVisible: true,
		
		drops: {
			coin: 0.7,
		}
	},
	
	bandit_necromancer: {
		typeName: bandit_necromancer,
		
		animationsConfig: config/animation/enemy/bandit_necromancer.json,
		stateConfig: config/enemy/states/bandit_necromancer.json,
		initialState: idle,
		attackConfig: config/enemy/attack/bandit_necromancer.json,
		aiConfig: config/enemy/ai/bandit.json,
		
		health: 10,
		movingSpeed: 2,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.1f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: false, // no sensor - this enemy type is only used in a cutscene
		
		usesHealthBar: false
	},
	
	bugbear: {
		typeName: bugbear,
		
		animationsConfig: config/animation/enemy/bugbear.json,
		stateConfig: config/enemy/states/bugbear.json,
		initialState: idle,
		attackConfig: config/enemy/attack/bugbear.json,
		
		health: 40,
		movingSpeed: 1.75f,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.2f,
		
		bodyShape: OCTAGON,
		bodyWidth: 1.7f,
		bodyHeight: 1.5f,
		
		addSensor: true,
		sensorRadius: 12f,
		
		pushForceDamage: 5,
		pushForceHit: 100,
		
		isBoss: true
		bossName: "Bugbear - Champion of the Bandits",
	},
	
	yeti: {
		typeName: yeti,
		
		animationsConfig: config/animation/enemy/yeti.json,
		stateConfig: config/enemy/states/yeti.json,
		initialState: idle,
		attackConfig: config/enemy/attack/yeti.json,
		aiConfig: config/enemy/ai/yeti.json,
		
		health: 35,
		movingSpeed: 1,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.2f,
		
		bodyShape: OCTAGON,
		bodyWidth: 1.7f,
		bodyHeight: 1.6f,
		
		addSensor: true,
		sensorRadius: 4f,
		
		pushForceDamage: 5,
		pushForceHit: 75,
		
		usesHealthBar: true,
		healthBarOffsetX: 0,
		healthBarOffsetY: -0.5,
		healthBarWidthFactor: 0.6,
		healthBarAlwaysVisible: true,
	},
	
	frost_giant: {
		typeName: frost_giant,
		
		animationsConfig: config/animation/enemy/frost_giant.json,
		stateConfig: config/enemy/states/frost_giant.json,
		initialState: idle,
		attackConfig: config/enemy/attack/frost_giant.json,
		
		health: 100,
		movingSpeed: 1.5f,
		applyGroundPhysics: false, // must be able to move on ice
		
		imageOffsetX: 0f,
		imageOffsetY: 0.3f,
		
		bodyShape: OCTAGON,
		bodyWidth: 1.5f,
		bodyHeight: 1.7f,
		
		addSensor: true,
		sensorRadius: 8f,
		
		pushForceDamage: 60,
		pushForceHit: 100,
		
		isBoss: true
		bossName: "Thrym - King of the Ice Giants",
	},
	
	kobold: {
		typeName: kobold,
		
		animationsConfig: config/animation/enemy/kobold.json,
		stateConfig: config/enemy/states/kobold.json,
		initialState: idle,
		attackConfig: config/enemy/attack/kobold.json,
		aiConfig: config/enemy/ai/kobold.json,
		
		health: 15,
		movingSpeed: 2,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.2f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.4f,
		
		addSensor: true,
		sensorRadius: 6f,
		
		pushForceDamage: 25,
		pushForceHit: 30,
		
		usesHealthBar: true,
		healthBarAlwaysVisible: true,
		healthBarOffsetX: 0,
		healthBarOffsetY: -0.1,
		healthBarWidthFactor: 0.7,
		
		drops: {
			coin: 0.7,
		}
	},
	
	kobold_dragonshield: {
		typeName: kobold_dragonshield,
		
		animationsConfig: config/animation/enemy/kobold_dragonshield.json,
		stateConfig: config/enemy/states/kobold_dragonshield.json,
		initialState: idle,
		attackConfig: config/enemy/attack/kobold_dragonshield.json,
		aiConfig: config/enemy/ai/kobold_dragonshield.json,
		
		health: 20,
		movingSpeed: 1.5f,
		
		takesDamageFromProjectiles: false,
		takesDamageInBlockingState: false,
		blockingStateName: block,
		soundWhenAttackBlocked: metal_hit_2,
		
		imageOffsetX: -0.1f,
		imageOffsetY: 0.2f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.5f,
		
		addSensor: true,
		sensorRadius: 5f,
		
		pushForceDamage: 15,
		pushForceHit: 30,
		
		usesHealthBar: true,
		healthBarAlwaysVisible: true,
		healthBarOffsetX: 0,
		healthBarOffsetY: -0.1,
		healthBarWidthFactor: 0.5,
		
		drops: {
			coin: 0.5,
		}
	},
	
	kobold_pyromancer: {
		typeName: kobold_pyromancer,
		
		animationsConfig: config/animation/enemy/kobold_pyromancer.json,
		stateConfig: config/enemy/states/kobold_pyromancer.json,
		initialState: idle,
		attackConfig: config/enemy/attack/kobold_pyromancer.json,
		aiConfig: config/enemy/ai/kobold_pyromancer.json,
		
		health: 15,
		movingSpeed: 2.5f,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.2f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.4f,
		
		addSensor: true,
		sensorRadius: 6f,
		
		pushForceDamage: 15,
		pushForceHit: 30,
		
		usesHealthBar: true,
		healthBarAlwaysVisible: true,
		healthBarOffsetX: 0,
		healthBarOffsetY: -0.1,
		healthBarWidthFactor: 0.7,
		
		drops: {
			coin: 0.5,
		}
	},
	
	fire_elemental_medium: {
		typeName: fire_elemental_medium,
		
		animationsConfig: config/animation/enemy/fire_elemental_medium.json,
		stateConfig: config/enemy/states/fire_elemental_medium.json,
		initialState: idle,
		attackConfig: config/enemy/attack/fire_elemental_medium.json,
		aiConfig: config/enemy/ai/elemental.json,
		
		
		health: 25,
		movingSpeed: 1,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.1f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.5f,
		
		addSensor: true,
		sensorRadius: 6f,
		
		pushForceDamage: 30,
		pushForceHit: 40,
		
		usesHealthBar: true,
		healthBarAlwaysVisible: true,
		healthBarOffsetX: 0,
		healthBarOffsetY: -0.1,
		healthBarWidthFactor: 0.7,
		
		drops: {
			coin: 0.7,
		}
	},
	
	phoenixling: {
		typeName: phoenixling,
		
		animationsConfig: config/animation/enemy/phoenixling.json,
		stateConfig: config/enemy/states/phoenixling.json,
		initialState: idle,
		attackConfig: config/enemy/attack/empty.json,
		
		// the push method in the enemy implementation is overwritten to do nothing - this is just the easiest way to recognize the player is near
		useSensorAsForceField: true, 
		
		health: 15,
		movingSpeed: 1f,
		
		imageOffsetX: 0f,
		imageOffsetY: 0f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.4f,
		
		addSensor: true,
		sensorRadius: 5f,
		
		pushForceDamage: 20,
		pushForceHit: 0,
	},
	
	hell_critter: {
		typeName: hell_critter,
		
		animationsConfig: config/animation/enemy/hell_critter.json,
		stateConfig: config/enemy/states/hell_critter.json,
		initialState: idle,
		attackConfig: config/enemy/attack/hell_critter.json,
		aiConfig: config/enemy/ai/hell_critter.json,
		
		health: 15,
		movingSpeed: 2.5,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.1f,
		
		bodyShape: CIRCLE,
		bodyRadius: 0.3f,
		
		addSensor: true,
		sensorRadius: 6f,
		
		pushForceDamage: 40,
		pushForceHit: 30,
		
		usesHealthBar: true,
		healthBarOffsetX: -0.1,
		healthBarOffsetY: -0.3,
		healthBarWidthFactor: 0.7,
		healthBarAlwaysVisible: true,
		
		drops: {
			coin: 0.4,
		}
	},
	
	ifrit: {
		typeName: ifrit,
		
		animationsConfig: config/animation/enemy/ifrit.json,
		stateConfig: config/enemy/states/ifrit.json,
		initialState: idle,
		attackConfig: config/enemy/attack/ifrit.json,
		
		health: 100,
		movingSpeed: 1.5f,
		
		imageOffsetX: 0f,
		imageOffsetY: 0.3f,
		
		bodyShape: OCTAGON,
		bodyWidth: 1.3f,
		bodyHeight: 1.7f,
		
		addSensor: true,
		sensorRadius: 8f,
		
		pushForceDamage: 20,
		pushForceHit: 80,
		
		isBoss: true
		bossName: "Surtur - Maroduer of the nine worlds",
	},
}