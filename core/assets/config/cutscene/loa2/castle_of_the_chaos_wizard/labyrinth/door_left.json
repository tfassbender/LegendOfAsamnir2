{
	id: loa2_l5_castle_of_the_chaos_wizard_labyrinth__door_left_cutscene,
	controlledActions: {
		move: {
		    startsWithCutscene: true,
		    
			type: MOVE,
			controlledUnitId: PLAYER,
			controlledUnitTarget: {x: -2, y: 0},
			
			executes: [
                labyrinth_sequence_condition,
			]
		},
		
		labyrinth_sequence_condition: {
            type: SWITCH_CONDITION,
			
			switchConditions: [
				{
				    conditionId: loa2_l5_castle_of_the_chaos_wizard__labyrinth__sequence_6,
				    executedStateName: set_sequence_7,
				}
				{
				    conditionId: loa2_l5_castle_of_the_chaos_wizard__labyrinth__sequence_2,
				    executedStateName: set_sequence_3,
				}
				{
					// default case
					executedStateName: reset_sequence,
				},
			],
		},
		
		// continue sequence
		set_sequence_7: {
            type: EVENT,
            
            event: {
                eventType: SET_GLOBAL_CONDITION_VALUE,
                stringValue: "{key: loa2_l5_castle_of_the_chaos_wizard__labyrinth__sequence, value: right_up_left_right_right_down_left}",
			},
            
            executes: [
                change_map,
			]
		},
		
		// continue sequence
		set_sequence_3: {
            type: EVENT,
            
            event: {
                eventType: SET_GLOBAL_CONDITION_VALUE,
                stringValue: "{key: loa2_l5_castle_of_the_chaos_wizard__labyrinth__sequence, value: right_up_left}",
			},
            
            executes: [
                change_map,
			]
		},
		
		// wrong combination -> reset sequence
		reset_sequence: {
            type: EVENT,
			
			event: {
				eventType: SET_GLOBAL_CONDITION_VALUE,
				stringValue: "{key: loa2_l5_castle_of_the_chaos_wizard__labyrinth__sequence, value: empty}",
			},
			
			executes: [
                change_map,
			]
		},
		
		change_map: {
			executionDelayInSeconds: 1f,
			type: EVENT,
			
			event: {
				eventType: CHANGE_MAP,
                stringValue: loa2_l5_chaos_wizard_castle_labyrinth,
                intValue: 2,
			},
			
			waitForEventToFinish: false,
			cameraFollowsTarget: false,
			
			executes: [
                end,
			]
		}
		
		end: {
			type: WAIT,
			executionDelayInSeconds: 0f,
		}
	}
}